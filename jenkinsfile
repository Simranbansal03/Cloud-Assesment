pipeline {
    agent any

    environment {
        ACR_LOGIN_SERVER = 'simran.azurecr.io'
        IMAGE_NAME = 'nodeconsoleapp1'
        CREDENTIALS_ID = 'jenkins-pipeline-sp'
        KUBECONFIG_CREDENTIAL_ID = 'kubeconfig' // Make sure to create this credential in Jenkins
    }

    stages {
        stage('Clone Repository') {
            steps {
                git url: 'https://github.com/Simranbansal03/Cloud-Assesment', branch: 'main'
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                   dockerImage = docker.build("${ACR_LOGIN_SERVER}/${IMAGE_NAME}:latest", "quess2")
                }
            }
        }

        stage('Push to Azure ACR') {
            steps {
                script {
                    docker.withRegistry("https://${ACR_LOGIN_SERVER}", "${CREDENTIALS_ID}") {
                        dockerImage.push('latest')
                    }
                }
            }
        }
        
        stage('Deploy to Kubernetes') {
            steps {
                withCredentials([file(credentialsId: "${KUBECONFIG_CREDENTIAL_ID}", variable: 'KUBECONFIG')]) {
                    bat '''
                    @echo off
                    
                    REM Set KUBECONFIG environment variable
                    set KUBECONFIG_FILE=%KUBECONFIG%
                    
                    REM Deploy to Kubernetes
                    kubectl --kubeconfig="%KUBECONFIG_FILE%" apply -f deployment.yaml
                    kubectl --kubeconfig="%KUBECONFIG_FILE%" apply -f service.yaml
                    
                    REM Verify deployment
                    kubectl --kubeconfig="%KUBECONFIG_FILE%" rollout status deployment/nodeconsoleapp1
                    '''
                }
            }
        }
    }

    post {
        success {
            echo '✅ Image pushed to Azure Container Registry and deployed to Kubernetes!'
        }
        failure {
            echo '❌ Something went wrong during the pipeline!'
        }
    }
}
